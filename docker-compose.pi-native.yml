services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.pi-native
    restart: unless-stopped
    volumes:
      - /dev/i2c-1:/dev/i2c-1  # I2C device access
      - /dev/gpiomem:/dev/gpiomem  # GPIO memory access
      - /dev/bus/usb:/dev/bus/usb  # USB device access
      - api_data:/app/data
      - /run/dbus:/run/dbus:rw
      - /var/run/dbus:/var/run/dbus:rw
      - /sys/class/bluetooth:/sys/class/bluetooth:rw  # Bluetooth system access
      - /sys/kernel/debug:/sys/kernel/debug:rw  # Bluetooth debugging
    devices:
      - "/dev/i2c-1:/dev/i2c-1"
      - "/dev/gpiomem:/dev/gpiomem"
    privileged: true  # Required for GPIO access
    ports:
      - "8000:8000"
    networks:
      - app-network
    group_add:
      - "994"  # i2c group GID from host
      - "993"  # gpio group GID from host
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - NET_RAW
      - NET_BIND_SERVICE
      - SYS_PTRACE  # Required for Bluetooth debugging
    environment:
      - SIMULATE=false
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - BLINKA_FORCEBOARD=RASPBERRY_PI_4B  # Force Pi platform detection
      - BLINKA_FORCECHIP=BCM2711  # Force Pi chip detection
      - BLINKA_FORCEI2C=1  # Force I2C bus selection
      - BLINKA_SKIP_BOARD_DETECTION=1  # Skip automatic board detection
    depends_on:
      - pigpiod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pigpiod:
    build:
      context: .
      dockerfile: Dockerfile.pigpiod
    container_name: pigpiod
    restart: unless-stopped
    privileged: true
    volumes:
      - /dev:/dev
      - /sys:/sys
    ports:
      - "8888:8888"  # Expose pigpio daemon port
    healthcheck:
      test: ["CMD", "pgrep", "pigpiod"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - app-network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://192.168.1.194:8000
    networks:
      - app-network
    depends_on:
      - api

volumes:
  api_data:
    
networks:
  app-network:
    driver: bridge
