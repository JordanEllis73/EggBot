# .github/workflows/deploy.yml
name: Deploy to Raspberry Pi

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: jordanellis73/eggbot/api
  IMAGE_NAME_UI: jordanellis73/eggbot/ui

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        platforms: linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push UI image
      uses: docker/build-push-action@v5
      with:
        context: ./ui
        platforms: linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_UI }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_UI }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: self-hosted  # This will run on your Pi
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
    - name: Deploy containers
      run: |
        # Pull latest images
        docker compose pull
        
        # Stop and remove old containers
        docker compose down
        
        # Start with new images
        docker compose up -d
        
        # Clean up old images
        docker image prune -af
