# .github/workflows/deploy.yml
name: Deploy to Raspberry Pi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: ${{ github.repository_owner }}/eggbot/api
  IMAGE_NAME_UI: ${{ github.repository_owner }}/eggbot/ui

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        platforms: linux/arm64,linux/amd64
        push: true
        tags: |
          ${{ toLowerCase(env.REGISTRY) }}/${{ toLowerCase(env.IMAGE_NAME_API) }}:latest
          ${{ toLowerCase(env.REGISTRY) }}/${{ toLowerCase(env.IMAGE_NAME_API) }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push UI image
      uses: docker/build-push-action@v5
      with:
        context: ./ui
        platforms: linux/arm64,linux/amd64
        push: true
        tags: |
          ${{ toLowerCase(env.REGISTRY) }}/${{ toLowerCase(env.IMAGE_NAME_UI) }}:latest
          ${{ toLowerCase(env.REGISTRY) }}/${{ toLowerCase(env.IMAGE_NAME_UI) }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Deploy to Raspberry Pi
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PI_HOST }}
        username: ${{ secrets.PI_USER }}
        key: ${{ secrets.PI_SSH_KEY }}
        script: |
          # Navigate to project directory
          cd /home/${{ secrets.PI_USER }}/your-project-name
          
          # Pull latest code
          git pull origin main
          
          # Login to GitHub Container Registry
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Pull latest images
          docker compose pull
          
          # Stop and remove old containers
          docker compose down
          
          # Start with new images
          docker compose up -d
          
          # Clean up old images
          docker image prune -af
